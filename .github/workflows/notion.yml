name: Notion Synchronization

on:
  issues:
    types:
      - opened
      - reopened
      - deleted
      - closed
      - assigned
      - unassigned
      - labeled
      - unlabeled

concurrency:
  group: Notion Synchronization
  cancel-in-progress: true

env:
  ISSUE_NUMBER: ${{ github.event.issue.number }}
  ISSUE_TITLE: ${{ github.event.issue.title }}
  ISSUE_URL: ${{ github.event.issue.html_url }}

jobs:
  check-existence:
    name: Check existence
    runs-on: ubuntu-latest
    outputs:
      page_id: ${{ steps.notion.outputs.page_id }}
      status: ${{ steps.notion.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check notion database
        id: notion
        run: |
          body=$(jq -n --arg link "$ISSUE_URL" '{
            "filter": {
              "property": "Link",
              "url": {
                "equals": $link
              }
            },
            "page_size": 1
          }' | jq -c .)

          results=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
            -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            --data "$body" | jq -r '.results');

            page_id=""
            status=""

            if [ "$results" != "[]" ]; then
              page_id=$(echo "$results" | jq -r '.[0].id')
              status=$(echo "$results" | jq -r '.[0].properties.Status.select.name')
            fi

            echo "page_id=$page_id" >> $GITHUB_OUTPUT
            echo "status=$status" >> $GITHUB_OUTPUT

  synchronize-with-notion:
    needs: check-existence
    name: Synchronize with Notion
    runs-on: ubuntu-latest
    permissions:
      issues: write
    env:
      PAGE_ID: ${{ needs.check-existence.outputs.page_id }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GH_REPO: ${{ github.repository }}
    steps:
      - name: Search issue on GitHub
        id: search
        if: ${{ env.PAGE_ID }}
        run: gh issue view "$ISSUE_NUMBER" --repo "$GH_REPO"
        continue-on-error: true

      - name: Setup page peoperties
        id: properties
        if: ${{ steps.search.outcome == 'skipped' || steps.search.outcome == 'success' }}
        env:
          CREATED_AT: ${{ github.event.issue.created_at }}
          CLOSED_AT: ${{ github.event.issue.closed_at }}
          TIME_ZONE: ${{ vars.TIMEZONE }}
        run: |
          status="${{ needs.check-existence.outputs.status }}"
          created_at=$(TZ="$TIME_ZONE" date -d "$CREATED_AT" +'%Y-%m-%dT%H:%M:%SZ')
          assignees=$(echo '${{ toJSON(github.event.issue.assignees.*.login) }}' | jq '[.[] | {name: .}]' | jq -c .)
          labels=$(echo '${{ toJSON(github.event.issue.labels.*.name) }}' | jq '[.[] | {name: .}]' | jq -c .)
          date=$(jq -n --arg start "$created_at" --arg time_zone "$TIME_ZONE" '{
            "start": $start,
            "end": null,
            "time_zone": $time_zone
          }' | jq -c .)

          if [ "$CLOSED_AT" != "" ]; then
            status="Closed"
            closed_at=$(TZ="$TIME_ZONE" date -d "$CLOSED_AT" +'%Y-%m-%dT%H:%M:%SZ')
            date=$(echo "$date" | jq --arg end "$closed_at" '.end=$end' | jq -c .)
          else
            status="Opened"
          fi

          echo "status=$status" >> $GITHUB_OUTPUT
          echo "assignees=$assignees" >> $GITHUB_OUTPUT
          echo "labels=$labels" >> $GITHUB_OUTPUT
          echo "date=$date" >> $GITHUB_OUTPUT

      - name: Setup parameters
        id: params
        run: |
          echo "{}" > body.json
          method="PATCH"
          request_url="https://api.notion.com/v1/pages"

          if [ "$PAGE_ID" != "" ]; then
            request_url+="/$PAGE_ID"
          else
            method="POST"
            body=$(jq '. + { parent: { database_id: "${{ secrets.NOTION_DATABASE_ID }}" } }' body.json)
            echo "$body" > body.json
          fi

          if [ "${{ steps.properties.outcome }}" == "skipped" ]; then
            body=$(jq '. + {
              in_trash: "true"
            }' body.json)
          else
            body=$(jq --arg title "$ISSUE_TITLE" --arg link "$ISSUE_URL" '. + { 
              properties: {
                Status: { 
                  select: { 
                    name: "${{ steps.properties.outputs.status }}"
                  } 
                },
                Title: {
                  title: [{
                    text: {
                      content: $title   
                    }
                  }]
                },
                Assignees: {
                  multi_select: ${{ steps.properties.outputs.assignees }}  
                },
                Labels: {
                  multi_select: ${{ steps.properties.outputs.labels }}  
                },
                Date: {
                  date: ${{ steps.properties.outputs.date }}  
                },
                Link: {
                  url: $link
                }  
              }
            }' body.json)
          fi

          echo "$body" > body.json

          echo "method=$method" >> $GITHUB_OUTPUT
          echo "request_url=$request_url" >> $GITHUB_OUTPUT
          echo "body=$(echo "$(cat body.json)" | jq -c .)" >> $GITHUB_OUTPUT

      - name: Synchronize page properties with Notion
        id: sync
        run: |
          result=$(curl -X ${{ steps.params.outputs.method }} "${{ steps.params.outputs.request_url }}" \
            -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            --data '${{ steps.params.outputs.body }}')

          url=$(echo "$result" | jq -r '.url')
          prefix=$(echo "$result" | jq -r '.properties.ID.unique_id.prefix')
          number=$(echo "$result" | jq -r '.properties.ID.unique_id.number')

          echo "url=$url" >> $GITHUB_OUTPUT
          echo "id=$prefix-$number" >> $GITHUB_OUTPUT

      - name: Comment on issue
        if: ${{ !env.PAGE_ID }}
        run: gh issue comment "$ISSUE_NUMBER" --body "$BODY"
        env:
          BODY: |
            **_Synchronized Notion page_**
            > :id: **`${{ steps.sync.outputs.id }}`**
            > :rocket: ${{ steps.sync.outputs.url }}
